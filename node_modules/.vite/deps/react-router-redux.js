import {
  __commonJS
} from "./chunk-LNEMQRCO.js";

// node_modules/react-router-redux/lib/reducer.js
var require_reducer = __commonJS({
  "node_modules/react-router-redux/lib/reducer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    exports.routerReducer = routerReducer;
    var LOCATION_CHANGE = exports.LOCATION_CHANGE = "@@router/LOCATION_CHANGE";
    var initialState = {
      locationBeforeTransitions: null
    };
    function routerReducer() {
      var state = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : initialState;
      var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, type = _ref.type, payload = _ref.payload;
      if (type === LOCATION_CHANGE) {
        return _extends({}, state, { locationBeforeTransitions: payload });
      }
      return state;
    }
  }
});

// node_modules/react-router-redux/lib/actions.js
var require_actions = __commonJS({
  "node_modules/react-router-redux/lib/actions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var CALL_HISTORY_METHOD = exports.CALL_HISTORY_METHOD = "@@router/CALL_HISTORY_METHOD";
    function updateLocation(method) {
      return function() {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return {
          type: CALL_HISTORY_METHOD,
          payload: { method, args }
        };
      };
    }
    var push = exports.push = updateLocation("push");
    var replace = exports.replace = updateLocation("replace");
    var go = exports.go = updateLocation("go");
    var goBack = exports.goBack = updateLocation("goBack");
    var goForward = exports.goForward = updateLocation("goForward");
    var routerActions = exports.routerActions = { push, replace, go, goBack, goForward };
  }
});

// node_modules/react-router-redux/lib/sync.js
var require_sync = __commonJS({
  "node_modules/react-router-redux/lib/sync.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    exports["default"] = syncHistoryWithStore;
    var _reducer = require_reducer();
    var defaultSelectLocationState = function defaultSelectLocationState2(state) {
      return state.routing;
    };
    function syncHistoryWithStore(history, store) {
      var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, _ref$selectLocationSt = _ref.selectLocationState, selectLocationState = _ref$selectLocationSt === void 0 ? defaultSelectLocationState : _ref$selectLocationSt, _ref$adjustUrlOnRepla = _ref.adjustUrlOnReplay, adjustUrlOnReplay = _ref$adjustUrlOnRepla === void 0 ? true : _ref$adjustUrlOnRepla;
      if (typeof selectLocationState(store.getState()) === "undefined") {
        throw new Error("Expected the routing state to be available either as `state.routing` or as the custom expression you can specify as `selectLocationState` in the `syncHistoryWithStore()` options. Ensure you have added the `routerReducer` to your store's reducers via `combineReducers` or whatever method you use to isolate your reducers.");
      }
      var initialLocation = void 0;
      var isTimeTraveling = void 0;
      var unsubscribeFromStore = void 0;
      var unsubscribeFromHistory = void 0;
      var currentLocation = void 0;
      var getLocationInStore = function getLocationInStore2(useInitialIfEmpty) {
        var locationState = selectLocationState(store.getState());
        return locationState.locationBeforeTransitions || (useInitialIfEmpty ? initialLocation : void 0);
      };
      initialLocation = getLocationInStore();
      if (adjustUrlOnReplay) {
        var handleStoreChange = function handleStoreChange2() {
          var locationInStore = getLocationInStore(true);
          if (currentLocation === locationInStore || initialLocation === locationInStore) {
            return;
          }
          isTimeTraveling = true;
          currentLocation = locationInStore;
          history.transitionTo(_extends({}, locationInStore, {
            action: "PUSH"
          }));
          isTimeTraveling = false;
        };
        unsubscribeFromStore = store.subscribe(handleStoreChange);
        handleStoreChange();
      }
      var handleLocationChange = function handleLocationChange2(location) {
        if (isTimeTraveling) {
          return;
        }
        currentLocation = location;
        if (!initialLocation) {
          initialLocation = location;
          if (getLocationInStore()) {
            return;
          }
        }
        store.dispatch({
          type: _reducer.LOCATION_CHANGE,
          payload: location
        });
      };
      unsubscribeFromHistory = history.listen(handleLocationChange);
      if (history.getCurrentLocation) {
        handleLocationChange(history.getCurrentLocation());
      }
      return _extends({}, history, {
        // The listeners are subscribed to the store instead of history
        listen: function listen(listener) {
          var lastPublishedLocation = getLocationInStore(true);
          var unsubscribed = false;
          var unsubscribeFromStore2 = store.subscribe(function() {
            var currentLocation2 = getLocationInStore(true);
            if (currentLocation2 === lastPublishedLocation) {
              return;
            }
            lastPublishedLocation = currentLocation2;
            if (!unsubscribed) {
              listener(lastPublishedLocation);
            }
          });
          if (!history.getCurrentLocation) {
            listener(lastPublishedLocation);
          }
          return function() {
            unsubscribed = true;
            unsubscribeFromStore2();
          };
        },
        // It also provides a way to destroy internal listeners
        unsubscribe: function unsubscribe() {
          if (adjustUrlOnReplay) {
            unsubscribeFromStore();
          }
          unsubscribeFromHistory();
        }
      });
    }
  }
});

// node_modules/react-router-redux/lib/middleware.js
var require_middleware = __commonJS({
  "node_modules/react-router-redux/lib/middleware.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = routerMiddleware;
    var _actions = require_actions();
    function _toConsumableArray(arr) {
      if (Array.isArray(arr)) {
        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
          arr2[i] = arr[i];
        }
        return arr2;
      } else {
        return Array.from(arr);
      }
    }
    function routerMiddleware(history) {
      return function() {
        return function(next) {
          return function(action) {
            if (action.type !== _actions.CALL_HISTORY_METHOD) {
              return next(action);
            }
            var _action$payload = action.payload, method = _action$payload.method, args = _action$payload.args;
            history[method].apply(history, _toConsumableArray(args));
          };
        };
      };
    }
  }
});

// node_modules/react-router-redux/lib/index.js
var require_lib = __commonJS({
  "node_modules/react-router-redux/lib/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.routerMiddleware = exports.routerActions = exports.goForward = exports.goBack = exports.go = exports.replace = exports.push = exports.CALL_HISTORY_METHOD = exports.routerReducer = exports.LOCATION_CHANGE = exports.syncHistoryWithStore = void 0;
    var _reducer = require_reducer();
    Object.defineProperty(exports, "LOCATION_CHANGE", {
      enumerable: true,
      get: function get() {
        return _reducer.LOCATION_CHANGE;
      }
    });
    Object.defineProperty(exports, "routerReducer", {
      enumerable: true,
      get: function get() {
        return _reducer.routerReducer;
      }
    });
    var _actions = require_actions();
    Object.defineProperty(exports, "CALL_HISTORY_METHOD", {
      enumerable: true,
      get: function get() {
        return _actions.CALL_HISTORY_METHOD;
      }
    });
    Object.defineProperty(exports, "push", {
      enumerable: true,
      get: function get() {
        return _actions.push;
      }
    });
    Object.defineProperty(exports, "replace", {
      enumerable: true,
      get: function get() {
        return _actions.replace;
      }
    });
    Object.defineProperty(exports, "go", {
      enumerable: true,
      get: function get() {
        return _actions.go;
      }
    });
    Object.defineProperty(exports, "goBack", {
      enumerable: true,
      get: function get() {
        return _actions.goBack;
      }
    });
    Object.defineProperty(exports, "goForward", {
      enumerable: true,
      get: function get() {
        return _actions.goForward;
      }
    });
    Object.defineProperty(exports, "routerActions", {
      enumerable: true,
      get: function get() {
        return _actions.routerActions;
      }
    });
    var _sync = require_sync();
    var _sync2 = _interopRequireDefault(_sync);
    var _middleware = require_middleware();
    var _middleware2 = _interopRequireDefault(_middleware);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    exports.syncHistoryWithStore = _sync2["default"];
    exports.routerMiddleware = _middleware2["default"];
  }
});
export default require_lib();
//# sourceMappingURL=react-router-redux.js.map
